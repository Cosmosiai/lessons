1. Что такое interface?
Это абстрактный класс у которого не реализован ни один метод. По сути этот класс просто указывает какие методы обязательно должны быть реализованы в дочерних классах.
2. В чем отличие interface от обычного класса?
Interface не может создавать объекты. У интерфейса нет переменных. Интерфейс не реализует методы(хотя можно указать дефолтную реализацию).
3. Объясните применение interface.
Часто нам нужно обобщать классы и объекты созданные от них. Есть много классов с похожими по сути функциями и методами работы. Interface помогает нам это делать. Создавая какой-то интерфейс и дочерние классы от него мы точно будем знать какой функционал будет в дочерних классах. С интерфейсом у нас будет доступ ко всем его дочерним классам(полезно при создании нового объекта или списка и т.д.). Есть много реализаций одного и того же действия, но всё же это одно и то же действие(питание - через рот, через кожу, через нос, через жабры...)
4. Отличие interface от abstract класса?
В абстрактных классах можно реализовать большинство базового функционала, благо этому помогает возможность создавать переменные. В дочерних классах функционал дополняется. В интерфейсах лишь указывается какой функционал должен быть реализован. В дочерних классах мы должны дописать весь функционал.
5. Что такое ссылка?
Ссылка - это адрес ячейки в памяти, где находится нужный объект.
6. Как можно использовать ссылку типа родительского класса для других объектов типа наследник?
Можно сгруппировать разные объекты типа наследник по ссылке родительского класса в одном массиве или списке.